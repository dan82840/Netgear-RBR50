#!/bin/sh /etc/rc.common
# Copyright (c) 2013 The Linux Foundation. All rights reserved.
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

start() {

        /sbin/init-gpio
	touch /tmp/led_time
	echo 0 > /tmp/led_time && sleep 90 && echo 1 > /tmp/led_time &

	local commit_flag=0
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/etc
	mkdir -p /tmp/samba
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	ln -sf /lib/libpthread-0.9.33.2.so /lib/libpthread.so.1
	ln -sf /lib/libuClibc-0.9.33.2.so /lib/libc.so.1

	grep -q debugfs /proc/filesystems && mount -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	klogd
	#syslogd -m 0
	ifconfig lo up
	/sbin/artmtd -r board_model_id | cut -f 2 -d ":" > /tmp/board_model_id
	#Create /tmp/orbi_type to indicate that It is Orbi Base or Satellites.
	model_prefix=`cat /tmp/board_model_id |cut -b3`
	[ "$model_prefix" = "R" ] && echo "Base" > /tmp/orbi_type
	[ "$model_prefix" = "S" ] && echo "Satellite" > /tmp/orbi_type
	#read Orbi serial board_data and show its type to /tmp/orbi_project
	/sbin/artmtd -r board_data | awk '{print $3}' > /tmp/board_data
	dev_type=`cat /tmp/board_data |cut -b3-4`
	if [ "$dev_type" = "01" ] || [ "$dev_type" = "02" ]; then
		echo "Desktop" > /tmp/orbi_project
	elif [ "$dev_type" = "04" ] || [ "$dev_type" = "05" ]; then
		echo "Orbimini" > /tmp/orbi_project
	elif [ "$dev_type" = "06" ] || [ "$dev_type" = "07" ]; then
		echo "Orbipro" > /tmp/orbi_project
	fi

	#Since early Mini had wrong board_data, correct the project by model_name
	model_name=`cat /tmp/board_model_id`
	if [ "x$model_name" = "xRBR30" -o "x$model_name" = "xRBS30" -o "x$model_name" = "xRBR40" -o "x$model_name" = "xRBS40"  ];then
		echo "Orbimini" > /tmp/orbi_project
	fi

	/bin/datalib $(cat /tmp/board_model_id)

	local temp_repacd_Daisy=$(/bin/config get repacd_Daisy_Chain_Enable)
	if [ "x$temp_repacd_Daisy" != "x0" ];then
		/bin/config set repacd_Daisy_Chain_Enable=0
		/bin/config commit
	fi

	# generate conf for RBR50/RBS50
	/sbin/generate_board_conf.sh

	echo "$(/bin/config get netbiosname)" > /proc/sys/kernel/hostname
	/sbin/printhosts

	# generate the firewall rule file after loading the configuration data.
	/usr/sbin/net-wall rule

	#Do delete overlay for the first factory mode.
	if [ "$(/bin/config get factory_mode)" = "1" ] && [ "$(/bin/config get faccalibra)" != "1" ]; then 
		cloud backup
		ls -d /overlay/* | grep -v hipplay | xargs rm -rf
		rm -rf /overlay/.*
		sync
		cloud restore
		# we touch a file to indicate that we need to update StreamBoost database
		touch /tmp/new_firmware
		cp /firmware_time /overlay/.firmware_time
		insmod qca-ssdk
		/bin/config set faccalibra=1
	fi
	if [ ! -s /etc/config/nowan  -o ! -s /etc/config/lanwan ]; then
		cp /rom/etc/config/* /etc/config
	fi
	grep -q "dev\.nss\.general\.redirect=1" /etc/sysctl.d/qca-nss-ecm.conf || cp /rom/etc/sysctl.d/qca-nss-ecm.conf /etc/sysctl.d/qca-nss-ecm.conf
	/etc/init.d/watchdog start &
	load_modules /etc/modules.d/*

	/etc/init.d/switch.init boot

	# start SIP ALG module
	/sbin/cmd_sipalg

	insmod /lib/ufsd/ufsd.ko

	# indicate the system first boot for first log
	/bin/config set syslog_up_first=0

	# allow wifi modules time to settle
	sleep 1

	path1=`find /rom/lib/firmware -name otp.bin |cut -d / -f 5,6`
	[ ! -f /lib/firmware/$path1/otp.bin ] && {
		cp /rom/lib/firmware/$path1/otp.bin /lib/firmware/$path1
		rm -f /lib/firmware/$path1/otp123.bin
		sync
	}

	# [ -f /etc/config/wireless ] || /sbin/wlan detect > /etc/config/wireless
	mkdir /tmp/mnt
	killall -q hotplug2
	[ -x /sbin/hotplug2 ] && /sbin/hotplug2 --override --persistent \
			--set-rules-file /etc/hotplug2.rules \
			--set-coldplug-cmd /sbin/udevtrigger \
			--max-children 4 >/dev/null 2>&1 &

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}

	# Load Default QoS rules if needed.
	qos_dft="$(/bin/config get qos_list_default)"
	if [ "$qos_dft" = "1" ]; then
		count=1
		while :
		do
			qos_rule="$(/bin/config get qos_dft_list$count)"
			if [ "x$qos_rule" = "x" ]; then
				break;
			fi
			/bin/config set qos_list$count="$qos_rule"

			count=`expr $count + 1`
		done

		count=`expr $count - 1`
		echo "$count QoS default rules are Loaded!"

		/bin/config set qos_list_default="0"
		commit_flag=1
	fi
	/sbin/disable_dhcp &
        mtdn=`grep language /proc/mtd | awk -F ':' '{print $1}' | awk -F 'd' '{print $2}'`
	/usr/sbin/nanddump /dev/mtd$mtdn -f /tmp/lang_file &
	#read wpspin from flash to /tmp/wpspin
	/sbin/artmtd -r wpspin
	#read serial number from flash to /tmp/Seria_Number
	/sbin/artmtd -r sn
	#read wan mac from flash to /tmp/wan_mac
	/sbin/artmtd -r mac
	#read hw id from flash to /tmp/board_hw_id
	/sbin/artmtd -r board_hw_id | cut -f 2 -d ':' > /tmp/board_hw_id
	#read model id from flash to /tmp/board_model_id
	/sbin/artmtd -r board_model_id | cut -f 2 -d ":" > /tmp/board_model_id
	#if restore the factory default read region from flash
	if [ "x$(/bin/config get board_region_default)" = "x1" ]; then
		region="$(/sbin/artmtd -r region | grep REGION | awk '{print $2}')"

		#when region setting on flash's board data area is RU
		if [ "$region" = "RU" ];then
			/bin/config set wla_country="19"
			/bin/config set wl_country="19"
			/bin/config set ntp_server="GMT-4"
			/bin/config set ntpserver_select="GMT-4"
			/bin/config set ntp_hidden_select="27"
			/bin/config set time_zone="GMT-4"
			/bin/config set email_ntpserver="GMT-4"
			/bin/config set region_flag="DISABLED"
			/bin/config set wla_2nd_hidden_channel="157"
		fi

		#when region setting on flash's board data area is GR
		if [ "$region" = "GR" ];then
			/bin/config set wla_country="4"
			/bin/config set wl_country="4"
			/bin/config set ntp_server="GMT-1"
			/bin/config set ntpserver_select="GMT-1"
			/bin/config set ntp_hidden_select="19"
			/bin/config set time_zone="GMT-1"
			/bin/config set email_ntpserver="GMT-1"
		fi

		#when region setting on flash's board data area is PR
		if [ "$region" = "PR" ];then
			/bin/config set wla_country="11"
			/bin/config set wl_country="11"
			/bin/config set ntp_server="GMT-8"
			/bin/config set ntpserver_select="GMT-8"
			/bin/config set ntp_hidden_select="33"
			/bin/config set time_zone="GMT-8"
			/bin/config set email_ntpserver="GMT-8"
			/bin/config set wla_2nd_hidden_channel="157"
		fi

		#when region setting on flash's board data area is BZ
		if [ "$region" = "BZ" ];then
			/bin/config set wla_country="9"
			/bin/config set wl_country="9"
			/bin/config set ntp_server="GMT+3"
			/bin/config set ntpserver_select="GMT+3"
			/bin/config set ntp_hidden_select="14"
			/bin/config set time_zone="GMT+3"
			/bin/config set email_ntpserver="GMT+3"
		fi

		#when region setting on flash's board data area is IN
		if [ "$region" = "IN" ];then
			/bin/config set wla_country="12"
			/bin/config set wl_country="12"
			/bin/config set ntp_server="GMT-5:30"
			/bin/config set ntpserver_select="GMT-5:30"
			/bin/config set ntp_hidden_select="30"
			/bin/config set time_zone="GMT-5:30"
			/bin/config set email_ntpserver="GMT-5:30"
			/bin/config set wla_2nd_hidden_channel="157"
		fi

		#when region setting on flash's board data area is KO
		if [ "$region" = "KO" ];then
			/bin/config set wla_country="7"
			/bin/config set wl_country="7"
			/bin/config set ntp_server="GMT-9"
			/bin/config set ntpserver_select="GMT-9"
			/bin/config set ntp_hidden_select="35"
			/bin/config set time_zone="GMT-9"
			/bin/config set email_ntpserver="GMT-9"
		fi

		#when region setting on flash's board data area is JP
		if [ "$region" = "JP" ];then
			/bin/config set wla_country="6"
			/bin/config set wl_country="6"
			/bin/config set ntp_server="GMT-9"
			/bin/config set ntpserver_select="GMT-9"
			/bin/config set ntp_hidden_select="35"
			/bin/config set time_zone="GMT-9"
			/bin/config set email_ntpserver="GMT-9"
			/bin/config set region_flag="DISABLED"
		fi

		#when region setting on flash's board data area is NA
		if [ "$region" = "NA" -o "$region" = "US" ];then
			/bin/config set wla_country="10"
			/bin/config set wl_country="10"
			/bin/config set wla_hidden_channel="48"
			/bin/config set wla_2nd_hidden_channel="157"
			/bin/config set region_flag="DISABLED"
			/bin/config set ntp_server="GMT+8"
			/bin/config set ntpserver_select="GMT+8"
			/bin/config set ntp_hidden_select="4"
			/bin/config set time_zone="GMT+8"
			/bin/config set email_ntpserver="GMT+8"
		fi
		#when region setting on flash's board data area is AU
		if [ "$region" = "AU" ];then
			/bin/config set wla_country="2"
			/bin/config set wl_country="2"
			/bin/config set ntp_server="GMT-10"
			/bin/config set ntpserver_select="GMT-10"
			/bin/config set ntp_hidden_select="37"
			/bin/config set time_zone="GMT-10"
			/bin/config set email_ntpserver="GMT-10"
			/bin/config set wla_2nd_hidden_channel="157"
		fi
		#when region setting on flash's board data area is CA
		if [ "$region" = "CA" ];then
			/bin/config set wla_country="3"
			/bin/config set wl_country="3"
			/bin/config set wla_hidden_channel="48"
			/bin/config set wla_2nd_hidden_channel="157"
			/bin/config set ntp_server="GMT+5"
			/bin/config set ntpserver_select="GMT+5"
			/bin/config set ntp_hidden_select="10"
			/bin/config set time_zone="GMT+5"
			/bin/config set email_ntpserver="GMT+5"
		fi

		/bin/config set board_region_default="0"
		commit_flag=1
	fi

	# MTP need set dakota_2.4G channel 6, dakota_5G channel 44, casecade_5G channel 157.
	if [ "$(/bin/config get factory_mode)" = "1" ]; then
		/bin/config set wl_hidden_channel="6"
		/bin/config set wla_hidden_channel="44"
	fi

	# Wireless security pre-set
	id_dft="$(/bin/config get default_ssphrase)"
	if [ "$id_dft" = "1" ]; then
		/sbin/artmtd -r fronthaul_ssid
		/sbin/artmtd -r fronthaul_passphrase
		if [ -s /tmp/ssid-setted ] && [ -s /tmp/passphrase-setted ]; then
			id_set=$(awk '{print $1}' /tmp/ssid-setted)
			ps_set=$(awk '{print $1}' /tmp/passphrase-setted)

			/bin/config set wl_ssid="$id_set"
			/bin/config set wla_ssid="$id_set"
			/bin/config set wl_wpa2_psk="$ps_set"
			/bin/config set wla_wpa2_psk="$ps_set"
			/bin/config set wl_sectype="4"
			/bin/config set wla_sectype="4"
			/bin/config set wps_status="5"
			/bin/config set wla_wps_status="5"

			# set SSID of guest netwroks according to Home Router GUI Redesign Specification Rev10 section 6.3
			/bin/config set wlg1_ssid="NETGEAR-Guest"
			/bin/config set wla1_ssid="NETGEAR-Guest"
		fi
		/bin/rm /tmp/ssid-setted
		/bin/rm /tmp/passphrase-setted
		/sbin/artmtd -r backhaul_ssid
		/sbin/artmtd -r backhaul_passphrase
		if [ -s /tmp/ssid-setted ] && [ -s /tmp/passphrase-setted ]; then
			id_set=$(awk '{print $1}' /tmp/ssid-setted)
			ps_set=$(awk '{print $1}' /tmp/passphrase-setted)

			/bin/config set wlg_ap_bh_ssid="$id_set"
			/bin/config set wlg_sta_ssid="$id_set"
			/bin/config set wla_2nd_sta_ssid="$id_set"
			/bin/config set wla_2nd_ap_bh_ssid="$id_set"
			/bin/config set wlg_ap_bh_wpa2_psk="$ps_set"
			/bin/config set wlg_sta_wpa2_psk="$ps_set"
			/bin/config set wla_2nd_sta_wpa2_psk="$ps_set"
			/bin/config set wla_2nd_ap_bh_wpa2_psk="$ps_set"
			/bin/config set wlg_ap_bh_sectype="4"
			/bin/config set wlg_sta_sectype="4"
			/bin/config set wla_2nd_sta_sectype="4"
			/bin/config set wla_2nd_ap_bh_sectype="4"
		fi	
		/bin/config set default_ssphrase="0"
		commit_flag=1
	fi
	/bin/config unset dni_hold_tds_update

	# Set backhaul RTS deault 2347
	project_and_type=`cat /tmp/orbi_project`_`cat /tmp/orbi_type`
	case $project_and_type in
	    "Desktop_Base")
		/bin/config set wla_2nd_ap_bh_rts="2347"
		;;
	    "Desktop_Satellite")
		/bin/config set wla_2nd_sta_rts="2347"
		;;
	    "Orbimini_Base")
		/bin/config set wla_ap_bh_rts="2347"
		;;
	    "Orbimini_Satellite")
		/bin/config set wla_sta_rts="2347"
		;;
	    *)
		echo "exception condition"
		;;
	esac
    
	# need to update Streamboost database after upgrade firmwrare
	[ -f /tmp/new_firmware ] && /bin/config set new_firmware=1 && commit_flag=1
	[ "$commit_flag" = "1" ] && /bin/config commit
	
	 /sbin/check_fwupgrade

	cloud checkversion

	[ -f /lib/read_caldata_to_fs.sh ] && {
		. /lib/functions.sh
		. /lib/read_caldata_to_fs.sh
		do_load_ipq4019_board_bin
	}
	
	if [ "$(/bin/config get overwrite_14010)" = "0" ]; then
		echo "not need do overwrite lbd"
	else
		/bin/config set lbd_PHYBasedPrioritization="1"
		/bin/config set lbd_RSSIMeasureSamples_W2="2"
		/bin/config set lbd_RSSIMeasureSamples_W5="2"
		/bin/config set lbd_BcnrptPassiveDuration="110"
		/bin/config set lbd_PhyRateScalingForAirtime="90"
		/bin/config set lbd_BTMAssociationTime="5"
		/bin/config set lbd_MinTxRateIncreaseThreshold="20"
		/bin/config set lbd_AuthRejMax="2"
		/bin/config set lbd_TSteering="15"
		/bin/config set lbd_LowRSSIAPSteerThreshold_CAP_W2="35"
		/bin/config set lbd_LowRSSIAPSteerThreshold_CAP_W5="20"
		/bin/config set lbd_LowRSSIAPSteerThreshold_RE_W2="35"
		/bin/config set lbd_LowRSSIAPSteerThreshold_RE_W5="20"
		/bin/config set lbd_TxRateXingThreshold_UG="20000"
		/bin/config set lbd_MUReportPeriod="15"
		/bin/config set lbd_LoadBalancingAllowedMaxPeriod="10"
		/bin/config set lbd_NormalInactTimeout="5"
		/bin/config set lbd_OverloadInactTimeout="5"
		/bin/config set lbd_MaxBTMUnfriendly="120"
		/bin/config set lbd_MaxBTMActiveUnfriendly="120"
		/bin/config set lbd_MaxSteeringUnfriendly="86400"
		/bin/config set lbd_11kProhibitTimeShort="15"
		/bin/config set lbd_11kProhibitTimeLong="60"
		/bin/config set lbd_BTMSteeringProhibitShortTime="15"
		/bin/config set lbd_BTMUnfriendlyTime="30"
		/bin/config set lbd_SteeringProhibitTime="120"
		/bin/config set lbd_RSSISteeringPoint_UG="15"
		/bin/config set lbd_RateRSSIXingThreshold_UG="20"
		/bin/config set lbd_MUOverloadThreshold_W2="80"
		/bin/config set lbd_MUOverloadThreshold_W5="99"
		/bin/config set lbd_MUSafetyThreshold_W2="50"
		/bin/config set lbd_MUSafetyThreshold_W5="90"
		/bin/config set lbd_APSteerToRootMinRSSIIncThreshold="10"
		/bin/config set lbd_DownlinkRSSIThreshold_W5="-70"
		/bin/config set overwrite_14010="0"
		/bin/config commit
	fi

	if [ "$(/bin/config get overwrite_20013)" = "0" ]; then
		echo "Also not need do overwrite lbd"
	else
		/bin/config set lbd_PHYBasedPrioritization="1"
		/bin/config set lbd_RSSIMeasureSamples_W2="2"
		/bin/config set lbd_RSSIMeasureSamples_W5="2"
		/bin/config set lbd_BcnrptPassiveDuration="110"
		/bin/config set lbd_PhyRateScalingForAirtime="90"
		/bin/config set lbd_BTMAssociationTime="5"
		/bin/config set lbd_MinTxRateIncreaseThreshold="20"
		/bin/config set lbd_AuthRejMax="2"
		/bin/config set lbd_TSteering="15"
		/bin/config set lbd_11kProhibitTimeLong="60"
		/bin/config set overwrite_20013="0"
		/bin/config commit
	fi

        if [ "$(/bin/config get overwrite_20070615)" = "0" ]; then
               echo "Also not need do overwrite lbd"
        else
               /bin/config set rssi_prefer_2g_bh="-82"
               /bin/config set lbd_RSSISteeringPoint_UG="15"
               /bin/config set overwrite_20070615="0"
               /bin/config commit
        fi  

	#For debug page pre setting
	local wifi_debug_option=$(/bin/config get wifi_debug_option)
	local wifi_debug_max_log_size=$(/bin/config get wifi_debug_max_log_size)
	if [  "$wifi_debug_option" = "" ];then
		/bin/config set wifi_debug_option="0x00112233"
	else
		/bin/config set wifi_debug_option=$wifi_debug_option
	fi

	if [  "$wifi_debug_max_log_size" = "" ];then
		/bin/config set wifi_debug_max_log_size="5"
	else
		/bin/config set wifi_debug_max_log_size=$wifi_debug_max_log_size
	fi

	local rssi_move_far2g=$(/bin/config get rssi_move_far2g)
	local rssi_move_far5g=$(/bin/config get rssi_move_far5g)
	local rssi_prefer_2g_bh=$(/bin/config get rssi_prefer_2g_bh)
	
	local Product_Name=`cat /sys/bus/mmc/devices/mmc0:0001/cid | cut -c 7-18`
	# KSI EMMC is 4d3632373034, Samsung flash is 344650443352
	if [ "$Product_Name" = "4d3632373034" ]; then
		echo 0 > /tmp/cfg_allow_upgrade_fw
	elif [ "$Product_Name" = "344650443352" ]; then
		echo 1 > /tmp/cfg_allow_upgrade_fw
	fi

	local ageing_time=$(/bin/config get ageing_time)
	/usr/sbin/brctl setageing br0 $ageing_time

        if [ "$model_prefix" = "S" ]; then
            /bin/config set wla_2nd_ap_bh_ssid=$(/bin/config get wla_2nd_sta_ssid)
            /bin/config set wlg_ap_bh_ssid=$(/bin/config get wlg_sta_ssid)

            /bin/config set wla_2nd_ap_bh_wpa2_psk=$(/bin/config get wla_2nd_sta_wpa2_psk)
            /bin/config set wlg_ap_bh_wpa2_psk=$(/bin/config get wlg_sta_wpa2_psk)

            /bin/config commit
        fi

	# As NTGR request, enable radio and disable wifi schedule and set TPC value to 100% when V1.10 and V2.0 firmware boot up.
        if [ "$model_prefix" = "R" ]; then
	    local tmp_endis_wl_radio=$(/bin/config get endis_wl_radio)
	    local tmp_endis_wla_radio=$(/bin/config get endis_wla_radio)
	    local tmp_wl_tpscale=$(/bin/config get wl_tpscale)
	    local tmp_wla_tpscale=$(/bin/config get wla_tpscale)
	    local tmp_wladv_schedule_enable=$(/bin/config get wladv_schedule_enable)
	    local tmp_wladv_schedule_enable_a=$(/bin/config get wladv_schedule_enable_a)

	    if [ "$tmp_endis_wl_radio" = "0" -o "tmp_endis_wla_radio" = "0" -o "tmp_wl_tpscale" != "100" -o "tmp_wla_tpscale" != "100" -o "tmp_wladv_schedule_enable" = "1" -o "tmp_wladv_schedule_enable_a" = "1" ]; then
		/bin/config set endis_wl_radio=1
		/bin/config set endis_wla_radio=1
		/bin/config set wl_tpscale=100
		/bin/config set wla_tpscale=100
		/bin/config set wladv_schedule_enable=0
		/bin/config set wladv_schedule_enable_a=0
		/bin/config set config_timestamp=$(date +%s)
		/bin/config commit
	    fi
	fi

	# disable hyd, wsplcd, and repacd for simplification of factory mode.
	if [ "$(/bin/config get factory_mode)" = "1" ]; then
	    /bin/config set hyd_enable=0
	    /bin/config set wsplcd_enable=0
	    /bin/config set repacd_enable=0
	    /bin/config commit
	fi

#	if [  "$rssi_move_far2g" = "" ];then
#		/bin/config set rssi_move_far2g="0"
#	else
#		/bin/config set rssi_move_far2g=$rssi_move_far2g
#	fi
#	if [  "$rssi_move_far5g" = "" ];then
#		/bin/config set rssi_move_far5g="0"
#	else
#		/bin/config set rssi_move_far5g=$rssi_move_far5g
#	fi

#	if [  "$rssi_prefer_2g_bh" = "" ];then
#		/bin/config set rssi_prefer_2g_bh="0"
#	else
#		/bin/config set rssi_prefer_2g_bh=$rssi_prefer_2g_bh
#	fi
}

stop() {
	service_stop /sbin/klogd
	service_stop /sbin/syslogd
}
